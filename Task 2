import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Load iris dataset
iris = load_iris()
iris_df = pd.DataFrame(iris.data, columns=iris.feature_names)
iris_df['species'] = iris.target
iris_df['species_name'] = iris_df['species'].apply(lambda x: iris.target_names[x])

# Optional: If you have your custom sales data
sales_data = {
    'SaleID': range(1, 11),
    'Date': [
        '2025-06-01', '2025-06-02', '2025-06-03', '2025-06-04', '2025-06-05',
        '2025-06-06', '2025-06-07', '2025-06-08', '2025-06-09', '2025-06-10'
    ],
    'Country': ['India', 'USA', 'India', None, 'UK', 'USA', 'India', 'UK', 'UK', 'USA'],
    'Phone': ['+91-98765', None, '+91-87654', '+44-12345', '+44-67890',
              '+1-55555', '+91-23456', '+44-33333', '+44-44444', None],
    'Website': [
        'site1.com', 'site2.com', None, 'site4.com', 'site5.com',
        'site6.com', 'site7.com', None, 'site9.com', 'site10.com'
    ],
    'UnitsSold': [5, 8, 2, 3, None, 7, 1, 9, 4, 6]
}
sales_df = pd.DataFrame(sales_data)

# --------- Analysis for Iris Dataset ---------
print("\n--- Iris Summary Statistics ---")
print(iris_df.describe())

print("\n--- Median ---")
print(iris_df.median(numeric_only=True))

sns.set(style="whitegrid")
numeric_cols = iris.feature_names

# Histograms
print("\nShowing Histograms...")
iris_df[numeric_cols].hist(bins=20, figsize=(10, 6), color='skyblue', edgecolor='black')
plt.suptitle("Histograms of Iris Features", fontsize=16)
plt.tight_layout()
plt.show()

# Boxplots
print("Showing Boxplots...")
plt.figure(figsize=(10, 6))
for i, col in enumerate(numeric_cols, 1):
    plt.subplot(2, 2, i)
    sns.boxplot(x='species_name', y=col, data=iris_df, palette='Set2')
    plt.title(f'Boxplot: {col}')
    plt.tight_layout()
plt.show()

# Pairplot
print("Showing Pairplot...")
sns.pairplot(iris_df, hue='species_name', vars=numeric_cols, palette='Set2')
plt.suptitle("Pairplot of Sepal and Petal Features by Species", y=1.02)
plt.show()

# Correlation heatmap
print("Correlation Matrix:")
corr_matrix = iris_df[numeric_cols].corr()
print(corr_matrix)

plt.figure(figsize=(8, 6))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=".2f", square=True)
plt.title("Correlation Matrix of Iris Features")
plt.show()

#skewness detection
print(iris_df[numeric_cols].skew())

